# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript


trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/dist'  # Assuming the build artifacts are generated in the 'dist' folder
    Contents: '**'  # Copy all files and folders recursively
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy build artifacts'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'  # Publish the build artifacts as a pipeline artifact
    artifact: 'my-react-app'
    publishLocation: 'pipeline'
  displayName: 'Publish build artifacts'

- task: CodeCoverage@1
  inputs:
    tool: 'lcov'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/lcov.info'  # Assuming code coverage results are generated in the 'coverage' folder
  displayName: 'Code coverage analysis'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'MySonarCloudServiceConnection'  # Add your SonarCloud service connection name here
    organization: 'my-organization'
    projectKey: 'my-project'
    projectName: 'My Project'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'my-project'
    cliSources: '$(System.DefaultWorkingDirectory)'
  displayName: 'Prepare analysis on SonarCloud'

- script: |
    npm run test  # Assuming you have configured tests in your project
  displayName: 'Run tests'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud analysis'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
  displayName: 'Publish SonarCloud analysis results'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'MyAzureServiceConnection'  # Add your Azure service connection name here
    appName: 'my-react-app'
    package: '$(Build.ArtifactStagingDirectory)/my-react-app'
  displayName: 'Deploy to Azure Web App'
